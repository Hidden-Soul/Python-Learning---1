import os
import shutil
#path = "C\\Users\\Cakow\\Desktop\\test.txt"
#if os.path.exixsts(path):
#    print("That location exist")
#    if os.path.isfile(path):
#        print("That is a file")
#    elif os.path.isdir(path):
#        print("That is a directory")
#else:
#    print("That location doesn't exist")

#try:
#    with open('test.txt') as file:
#       print(file.read())
#    print(file.closed)
#except FileNotFoundError:
#    print("That file was not found")

#text = "Hello World\nThis is amazing"
#with open('test.txt','r','w','a') as file:
#    file.write(text)

#copyfile() = copies contents
#copy() = copyfile() + permission mod + destination can be a directory
#copy2() = copy() + copies metadata (File's creation and motification times)
#shutil.copyfile('test.txt', 'C\\Users\\Cakow\\Desktop\\copy.txt') #src.dst

#source = "test.txt"
#destination = "C\\Users\\Cakow\\Desktop\\test.txt"
#try:
#    if os.path.exists(destination):
#        print("There is already a file there")
#    else:
#        os.replace(source,destination)
#        print(source+" was moved")
#except FileNotFoundError:
#    print(source+ " was not found")

#path = 'test.txt'
#try:    
#    os.remove(path)
#    os.rmdir(path)
#    shutil.rmtree(path)
#except FileNotFoundError:
#    print("That file was not found")
#except PermissionError:
#    print("You do not have permission")
#except OSError:
#    print("You cannot delete using that function")
#else:
#    print(path+" was deleted")

#from Classes import Car
#car_1 = Car("Chevy", "Corvette", "2022", "Black")
#car_2 = Car("Ford", "Mustang", "2021", "White")
#print(car_1.make)
#print(car_1.model)
#print(car_1.year)
#print(car_1.color)
#car_1.wheels = 2
#car_1.drive()
#car_1.stop()
#print(Car.wheels)


#print(happy := True)

#foods = list()
#while True:
#    food = input("What food do you like")
#    if food == "quit":
#        break
#    food.append(food)
#while food := input("What food do you like:") != "quit":
#    foods.append(food)


#print("Hello")
#hi = hello
#hi()
#say = print
#say("Good")

#def quiet(text):
#    return text.lower()

#def loud(text):
#    return text.upper()
#def hello(func):
#    text = func("Hello")
#    print(text)
#hello(loud)

#def divisor(x):
#    def dividend(y):
#        return y / x
#    return dividend
#divide = divisor(2)
#print(divide(10))

#lamba functions

#def double(x):
#    return x * 2
#print(double(5))
#double = lambda x:x * 2
#multiply = lambda x, y: x * y
#add = lambda x, y, z: x + y + z
#full_name = lambda first_name, last_name: first_name +" "+ last_name
#age_check = lambda age:True if age >= 18 else False
#print(double(5))
#print(multiply(5,6))

#sort

#students = ["squidward", "spongebob", "patrick"]
#students.sort()
#students.sort(reverse=True)
#sorted_students = sorted(students,reverse=True)
#for i in sorted_students:
#    print(i)
#kids = [("squidward", "F", 54), ("spongebob", "A", 34), ("patrick", "D", 98)]
#grade = lambda grades:grades[1]
#kids.sort(key=grade)
#sorted_kids = sorted(kids,key=grade)
#for i in kids:
#    print(i)

#map

#store = [("shirt",50),("pants",60),("jacket",80)]
#to_euros = lambda data: (data[0],data[1]*0.82)
#store_euros = list(map(to_euros, store))
#for i in store_euros:
#    print(i)

#filter

#store = [("shirt",50),("pants",60),("jacket",80)]
#price = lambda data:data[1] >= 51
#clothes = list(filter(price,store))
#for i in clothes:
#    print(i)

#reduce

#import functools
#letters = ["H","E","L","L","O"]
#word = functools.reduce(lambda x, y:x + y, letters)
#print(word)
#factorial = [5,4,3,2,1]
#result = functools.reduce(lambda x,y:x*y:factorial)
#print(result)

#list comprehension

#squares = []
#for i in range(1,11):
#    squares.append(i *i)
#print(squares)
#squares = [i * i for i in range(1,11)]
#print(squares)
#passed_students = list(filter(lambda x: x >= 60, students))
#passed_students = [i for i in students if i >= 60]
#passed_students = [i if i >= 60 else "FAILED" for i in students ]
#print(passed_students)

#dictionary comprehensions

#cities_in_F = {'New York': 32, 'Boston': 75}
#cities_in_C = {key: ((value-32)*(5/9)) for (key,value) in cities_in_F.items()}
#weather = {'New York': "Sunny", "Boston": "Sunny"}
#sunny_weather = {key: value for (key,value) in weather.items() if value == "sunny"}
#print(sunny_weather)
#desc_cities = {key: ("WARM" if value >= 40 else "COLD") for (key,value) in cities_in_C.items()}
#print(desc_cities)
#def check_temp(value):
#    if value >= 70:
#        return "HOT"
#    elif 69 >= value >= 40:
#        return "WARM"
#    else:
#        return "COLD"
#desc_cities = {key: check_temp(value) for (key,value) in cities_in_C.items()}

#zip function

#usernames = ["Dude", "Bro","Mister"]
#passwords = ("Password","abc","hi")
#login_date = ["2/2","2/3","2/4"]
#users = dict(list(zip(usernames, passwords, login_date)))
#for key,value in users.items():
#    print(key)

#if __name__ == '__main__':
#    print("Running directly")
#else:
#    print("Running indirectly")

#time module

#import time
#print(time.ctime(0))
#print(time.time())
#print(time.ctime(time.time()))
#time_object = time.localtime()
#print(time_object)
#local_time = time.strftime("%B $d %Y %H:%M:%S", time_object)
#print(local_time)
#time_object = time.gmtime()
#time_string = "20 April, 2020"
#time.strptime(time_string,"%d %B, %Y")
#time_tuple = (2020, 4, 20, 2, 3, 2, 3, 4, 0)
#time_string = time.asctime(time_tuple)
#time_string = time.mktime(time_tuple)
#time.asctime(time_tuple)

#Multithreading:IO bound task

#import threading
#import time
#print(threading.active_count())
#print(threading.enumerate())
#print(time.perf_counter())
#def eat_breakfast():
#    time.sleep(3)
#    ("You eat breakfast")
#def drink_coffee():
#    time.sleep(4)
#    print("You drink coffee")
#def study():
#    time.sleep(4)
#    print("You finish studying")
#x = threading.Thread(target=eat_breakfast.args())
#x.start()
#y = threading.Thread(target=drink_coffee.args())
#y.start()
#z = threading.Thread(target=study.args())
#z.start()
#x.join()
#y.join()
#z.join()

#daemon threads

#import threading
#import time
#answer = input("Do you wish to exit:")
#def timer():
#    print()
#    count = 0
#    while True:
#        time.sleep(1)
#        count += 1
#        print("logged in for:",count,"seconds")
#x = threading.Thread(target=timer, daemon=True)
#x.start()
#x.setDaemon(True)
#print(x.isDaemon())

#multiproccessing

#from multiprocessing import Process, cpu_count
#import time
#def counter(num):
#    count = 0
#    while count < num:
#        count += 1
#def main():
#    print(cpu_count)
#    a = Process(target=counter, args=(1000000000,)) 
#    b = Process(target=counter, args=(1000000000,)) 
#   c = Process(target=counter, args=(1000000000,)) 
#    d = Process(target=counter, args=(1000000000,)) 
#    a.start()
#    b.start()
#    c.start()
#    d.start()
#    a.join()
#    b.join()
#    c.join()
#    d.join()
#    print("Finish in:",time.perf_counter, "seconds")
#if __name__ == '__main__':
#    main()

#GUI windows

#from tkinter import *
#indow = Tk() #instantiate an instance of a window
#window.geometry("420x420")
#window.title("HIDDENSOUL")
#window.config(background="black")
#icon = PhotoImage(file='')
#window.iconphoto(True,icon)
#window.mainloop()

#labels

#from tkinter import *
#window = Tk()
#photo = PhotoImage(file='')
#label = Label(window,
#              text="Hello World",
#              font=('Arial',40,'bold'),
#              fg='green',
#              bg='black',
#              relief=RAISED,
#             bd=10,
#              padx=20,
#              pady=20,
#              image=photo,
#              compund='bottom')
#label.pack()
#label.place(x=0,x=0)
#window.mainloop()

#buttons

#from tkinter import *
#count = 0
#def click():
#    global count
#    count += 1
#    print(count)
#    print("You clicked")
#window = Tk()
#button = Button(window,
#                text="click me",
#                command=click,
#                font=("Comic Sans",30),
#                fg="Black",
#                bg="White",
#               activeforeground="Green",
#                activebackground="Red",
#                state=ACTIVE,
#                image='',
#               compound='bottom')
#button.pack()
#window.mainloop()

#entry box

#from tkinter import *
#def submit():
#    username = entry.get()
#    print("Hello "+ username)
#    entry.config(state=DISABLED)
#def delete():
#    entry.delete(0,END)
#def backspace():
#    entry.delete(len(entry.get())-1, END)
#window = Tk()
#entry = Entry(window,
#              font=("Arial",50),
#              show="*")
#entry.insert(0,'Spongebob')
#entry.pack()
#submit_button = Button(window,text="submit",command=submit)
#submit_button.pack(side=RIGHT)
#delete_button = Button(window,text="delete",command=delete)
#delete_button.pack(side=RIGHT)
#backspace_button = Button(window,text="backspace",command=delete)
#backspace.pack(side=RIGHT)
#window.mainloop()

#check buttons

#from tkinter import *
#def display():
#    if x.get() == 1:
#        print("You agree")
#    else:
#        print("You don't agree")
#window = Tk()
#x = IntVar()
#check_button = Checkbutton(window,
#                           text="I agree",
#                           variable=x,
#                           onvalue=1,
#                           offvalue=0,
#                           command=display)
#check_button.pack()
#window.mainloop()

#radio buttons

#from tkinter import *
#food = ["pizza","hamburger","hotdog"]
#def order():
#    if x.get() == 0:
#        print("You order pizza")
#    elif x.get == 1:
#        print("You ordered a hamburger")
#    elif x.get == 2:
#        print("You ordered a hotdog")
#    else:
#        print("huh")
#window = Tk()
#x = IntVar()
#for index in range(len(food)):
#    radiobutton = Radiobutton(window,
#                              text=food[index], #text to radio button
#                              variable=x, #groups radio buttons together if they share the same variable
#                              value=index, #assigns each radio button a different value
#                              indicatoron=0, #eliminates circle indicators
#                              width=375,
#                              command=order) 
#    radiobutton.config()
#    radiobutton.pack(anchor=W)
#window.mainloop()

#scale

#from tkinter import *
#def submit():
#    print("THis temp is: "+ str(scale.get())+ " degrees C")
#window = Tk()
#scale = Scale(window,
#              from_=100,
#              to=0,
#              text='submit',
#               command=submit,
#               orient=VERTICAL,
#               tickintervals = 10, #Adds numeric indicators
#                showvalue = 0, #hide current value
#                resolution = 5,
#                troughcolor = 'blue')
#scale.set((scale['from']-scale['to'])/2+scale['to'])
#scale.pack()
#button = Button(window)
#window.mainloop()

#listbox

#def submit():
#    food = []
#    for index in listbox.curselection():
#        food.insert(index,listbox.get(index))
#    print("You have ordered: ")
#    listbox.get(listbox.curselection())
#def add():
#    listbox.insert(listbox.size(),entryBox.get())
#    listbox.config(height=listbox.size())
#def delete():
#    for index in reversed(listbox.curselection()):
#        listbox.delete(index)
#    listbox.delete(listbox.curselection())
#    list.config(height=listbox.size())
#from tkinter import *
#window = Tk()
#listbox = Listbox(window,
#                  bg='black',
#                  width=12)
#listbox.pack()
#listbox.insert(1,"pizza")
#listbox.insert(2,"pasta")
#listbox.insert(3,"bread")
#listbox.insert(4,"soup")
#listbox.insert(5,"salad")
#listbox.config(height=listbox.size())
#entryBox = Entry(window)
#entryBox.pack()
#submitButton = Button(window,text="submit",command=submit)
#submitButton.pack()
#addButton = Button(window,text="add",command=add)
#addButton.pack()
#deleteButton = Button(window,text="delete",command=delete)
#deleteButton.pack()
#window.mainloop()

#open a file

#from tkinter import *
#from tkinter import filedialog
#def openFile():
#    filedialog.askopenfilename(initialdir="",
#                               title="Open file",
#                               filetypes= (("text files", "*.txt"),("all files","*")))
#    file = open(filepath, 'r')
#    print(file.read())
#    file.close()
#window = Tk()
#button = Button(text="Open",command=openFile)
#window.mainloop()

#save a file

#from tkinter import *
#from tkinter import filedialog
#def saveFile():
#    file = filedialog.asksaveasfile(initialdir='',
#                                    defaultextension='.txt',
#                                    filetypes=[
#                                        ("Text file",".txt"),
#                                        ("HTML file", ".html"),
#                                        ("ALL file",".*")])
#    if file is None:
#        return
#    filetext = str(text.get(1.0,END))
#    filetext = input("Enter some text: ")
#    file.write(filetext)
#    file.close()
#window = Tk()
#button = Button(text='save',command=saveFile)
#button.pack()
#text = text(window)
#text.pack()
#window.mainloop()

#pip





